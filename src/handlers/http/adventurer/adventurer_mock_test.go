// Code generated by MockGen. DO NOT EDIT.
// Source: adventurer.go

// Package mock_adventurer is a generated GoMock package.
package adventurer

import (
	reflect "reflect"

	adventurer "github.com/arfaghifari/guild-board/src/model/adventurer"
	gomock "github.com/golang/mock/gomock"
)

// MockUsecase is a mock of Usecase interface.
type MockUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockUsecaseMockRecorder
}

// MockUsecaseMockRecorder is the mock recorder for MockUsecase.
type MockUsecaseMockRecorder struct {
	mock *MockUsecase
}

// NewMockUsecase creates a new mock instance.
func NewMockUsecase(ctrl *gomock.Controller) *MockUsecase {
	mock := &MockUsecase{ctrl: ctrl}
	mock.recorder = &MockUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsecase) EXPECT() *MockUsecaseMockRecorder {
	return m.recorder
}

// CreateAdventurer mocks base method.
func (m *MockUsecase) CreateAdventurer(arg0 adventurer.Adventurer) (adventurer.Adventurer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAdventurer", arg0)
	ret0, _ := ret[0].(adventurer.Adventurer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAdventurer indicates an expected call of CreateAdventurer.
func (mr *MockUsecaseMockRecorder) CreateAdventurer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAdventurer", reflect.TypeOf((*MockUsecase)(nil).CreateAdventurer), arg0)
}

// GetAdventurer mocks base method.
func (m *MockUsecase) GetAdventurer(arg0 int64) (adventurer.Adventurer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdventurer", arg0)
	ret0, _ := ret[0].(adventurer.Adventurer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdventurer indicates an expected call of GetAdventurer.
func (mr *MockUsecaseMockRecorder) GetAdventurer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdventurer", reflect.TypeOf((*MockUsecase)(nil).GetAdventurer), arg0)
}

// UpdateAdventurerRank mocks base method.
func (m *MockUsecase) UpdateAdventurerRank(arg0 adventurer.Adventurer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAdventurerRank", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAdventurerRank indicates an expected call of UpdateAdventurerRank.
func (mr *MockUsecaseMockRecorder) UpdateAdventurerRank(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAdventurerRank", reflect.TypeOf((*MockUsecase)(nil).UpdateAdventurerRank), arg0)
}